{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","title","type","id","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","split","filter","element","length","disabled","onClick","newText","toUpperCase","toLowerCase","join","Text","document","getElementById","navigator","clipboard","writeText","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"yOACe,SAASA,EAAOC,GAC7B,OACE,mCACE,8BACE,qBAAKC,UAAU,yDAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,SACGF,EAAMG,QAET,wBACEF,UAAU,iBACVG,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,oBAPb,SASE,sBAAMH,UAAU,0BAElB,qBACEA,UAAU,2BACVI,GAAG,oC,iBCrBF,SAASC,EAASN,GAC/B,MAAwBO,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAwBA,OACE,mCACE,qBAAKR,UAAU,OAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,cAAf,SACE,6BAAKD,EAAMU,YAEb,qBAAKT,UAAU,YAAf,SACE,0BACEA,UAAU,eACVU,MAAOH,EACPI,SAjCK,SAACC,GACtBJ,EAAQI,EAAMC,OAAOH,QAiCLN,GAAG,QACHU,KAAK,QAGT,sBAAKd,UAAU,cAAf,UACE,8BACE,oDAAgC,IAE9BO,EAAKQ,MAAM,OAAOC,QAAO,SAACC,GACxB,OAA0B,IAAnBA,EAAQC,UACdA,OACH,IANJ,aAOaX,EAAKW,OAPlB,cAOqC,OAErC,8BACE,oDACC,KACCX,EAAKQ,MAAM,KAAKC,QAAO,SAACC,GACtB,OAA0B,IAAnBA,EAAQC,UACdA,OAAQ,IALf,iCAYR,sBAAKlB,UAAU,MAAf,UACG,IACD,wBACEmB,SAA0B,IAAhBZ,EAAKW,OACff,KAAK,SACLH,UAAU,+BACVoB,QAtEU,WACpB,IAAIC,EAAUd,EAAKe,cACnBd,EAAQa,IAgEA,kCAQA,wBACEF,SAA0B,IAAhBZ,EAAKW,OACff,KAAK,SACLH,UAAU,mCACVoB,QAvEU,WACpB,IAAIC,EAAUd,EAAKgB,cACnBf,EAAQa,IAiEA,kCAQA,wBACEF,SAA0B,IAAhBZ,EAAKW,OACff,KAAK,SACLH,UAAU,2BACVoB,QA3Ec,WACxB,IAAIC,EAAUd,EAAKQ,MAAM,QACzBP,EAAQa,EAAQG,KAAK,OAqEb,gCAQA,wBACEL,SAA0B,IAAhBZ,EAAKW,OACff,KAAK,SACLH,UAAU,kCACVoB,QA3EY,WAEtBZ,EADc,KAsEN,2BAUF,sBAAKR,UAAU,YAAf,UACE,oBAAIA,UAAU,cAAd,4BACA,sBAAKA,UAAU,YAAf,UACE,mBAAGA,UAAU,YAAb,SACGO,EAAKW,OAAS,EACXX,EACA,0DAEN,wBACEY,SAA0B,IAAhBZ,EAAKW,OACff,KAAK,SACLH,UAAU,qCACVoB,QAjGK,WACjB,IAAIK,EAAOC,SAASC,eAAe,SACnCC,UAAUC,UAAUC,UAAUL,EAAKf,QA2FzB,oCCjGCqB,MAXf,WACE,OACE,qCACE,cAACjC,EAAD,CAAQI,MAAM,cACd,qBAAKF,UAAU,YAAf,SACE,cAAC,EAAD,CAAUS,QAAQ,iCCGXuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASC,eAAe,SAM1BK,M","file":"static/js/main.7bf5a10c.chunk.js","sourcesContent":["import React from \"react\";\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <div>\r\n        <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark \">\r\n          <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n              {props.title}\r\n            </a>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#navbarSupportedContent\"\r\n              aria-controls=\"navbarSupportedContent\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div\r\n              className=\"collapse navbar-collapse\"\r\n              id=\"navbarSupportedContent\"\r\n            ></div>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./TextForm.css\";\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n  };\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n  };\r\n  const handleRemoveSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n  };\r\n  const handleCopy = () => {\r\n    let Text = document.getElementById(\"myBox\");\r\n    navigator.clipboard.writeText(Text.value);\r\n  };\r\n  const handleClearText = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"main\">\r\n        <div className=\"container my-5\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                  <h5>{props.heading}</h5>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    value={text}\r\n                    onChange={handleOnChange}\r\n                    id=\"myBox\"\r\n                    rows=\"7\"\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <p>\r\n                    <strong>Text Summary: </strong>{\" \"}\r\n                    {\r\n                      text.split(/\\s+/).filter((element) => {\r\n                        return element.length !== 0;\r\n                      }).length\r\n                    }{\" \"}\r\n                    Words and {text.length} Characters{\" \"}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Reading Time: </strong>\r\n                    {0.008 *\r\n                      text.split(\" \").filter((element) => {\r\n                        return element.length !== 0;\r\n                      }).length}{\" \"}\r\n                    Minutes To Read !\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\">\r\n            {\" \"}\r\n            <button\r\n              disabled={text.length === 0}\r\n              type=\"button\"\r\n              className=\"btn btn-success btn-sm my-3 \"\r\n              onClick={handleUpClick}\r\n            >\r\n              Convert To Uppercase\r\n            </button>\r\n            <button\r\n              disabled={text.length === 0}\r\n              type=\"button\"\r\n              className=\"btn btn-warning btn-sm my-3 mx-2\"\r\n              onClick={handleLoClick}\r\n            >\r\n              Convert To Lowercase\r\n            </button>\r\n            <button\r\n              disabled={text.length === 0}\r\n              type=\"button\"\r\n              className=\"btn btn-info btn-sm my-1\"\r\n              onClick={handleRemoveSpace}\r\n            >\r\n              Remove Extra Space\r\n            </button>\r\n            <button\r\n              disabled={text.length === 0}\r\n              type=\"button\"\r\n              className=\"btn btn-danger btn-sm my-1 mx-2\"\r\n              onClick={handleClearText}\r\n            >\r\n              Clear Text\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"card my-3\">\r\n            <h5 className=\"card-header\">Analyzed Text:</h5>\r\n            <div className=\"card-body\">\r\n              <p className=\"card-text\">\r\n                {text.length > 0\r\n                  ? text\r\n                  : \"Nothing To Preview: Please Enter Text To Get Preview!\"}\r\n              </p>\r\n              <button\r\n                disabled={text.length === 0}\r\n                type=\"button\"\r\n                className=\"btn btn-secondary btn-sm my-3 mx-1\"\r\n                onClick={handleCopy}\r\n              >\r\n                Copy Text\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n\nfunction App() {\n  return (\n    <>\n      <Navbar title=\"Text Ease\" />\n      <div className=\"container\">\n        <TextForm heading=\"Enter Text To Analyze:\" />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}